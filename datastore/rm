#!/bin/bash
#
#==========================================================================
# Copyright 2016 LINBIT USA LCC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#==========================================================================

# Set up environment
if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

source "$LIB_LOCATION"/sh/scripts_common.sh

DRIVER_PATH=$(dirname "$0")
source "${DRIVER_PATH}"/../libfs.sh
source "${DRIVER_PATH}"/drbd_common.sh
source "${DRIVER_PATH}"/drbdmanage.conf

drbd_log "Beginning rm action."

# Get arguments from OpenNebula Core
DRIVER_ACTION=$1

XPATH="${DRIVER_PATH}/../xpath.rb -b $DRIVER_ACTION"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH /DS_DRIVER_ACTION_DATA/IMAGE/SOURCE)

DRBD_RES_NAME="${XPATH_ELEMENTS[0]}"

# Log that removing a non-existing resource was attempted.
if [ -z "$(drbd_res_exsists "$DRBD_RES_NAME")" ]; then
  drbd_log "No resource named $DRBD_RES_NAME: cannot remove."
fi

# Exit with error if removing resource times out.
exec_and_log "drbd_remove_res $DRBD_RES_NAME"
  "Unable to remove $DRBD_RES_NAME: timed out."

drbd_log "Ending rm action."

exit 0
