#!/bin/bash

# Set up environment

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../libfs.sh
source ${DRIVER_PATH}/drbd.conf

# Get arguments from OpenNebula Core

DRIVER_ACTION=$1
IMAGE_ID=$2

XPATH="${DRIVER_PATH}/../xpath.rb -b $DRIVER_ACTION"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/DATASTORE/BASE_PATH \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/RESTRICTED_DIRS \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/SAFE_DIRS \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/BRIDGE_LIST \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/DRBD_REDUNDANCY \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/DRBD_MINOR_PREFIX \
                    /DS_DRIVER_ACTION_DATA/IMAGE/PATH \
                    /DS_DRIVER_ACTION_DATA/IMAGE/SIZE \
                    /DS_DRIVER_ACTION_DATA/IMAGE/TEMPLATE/MD5 \
                    /DS_DRIVER_ACTION_DATA/IMAGE/TEMPLATE/SHA1 \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/NO_DECOMPRESS \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/LIMIT_TRANSFER_BW)

BASE_PATH="${XPATH_ELEMENTS[j++]}"
RESTRICTED_DIRS="${XPATH_ELEMENTS[j++]}"
SAFE_DIRS="${XPATH_ELEMENTS[j++]}"
BRIDGE_LIST="${XPATH_ELEMENTS[j++]}"
DRBD_REDUNDANCY="${XPATH_ELEMENTS[j++]:-$DRBD_REDUNDANCY}"
DRBD_MINOR_PREFIX="${XPATH_ELEMENTS[j++]:-$DRBD_MINOR_PREFIX}"
IMAGE_SRC="${XPATH_ELEMENTS[j++]}"
SIZE="${XPATH_ELEMENTS[j++]:-0}"
MD5="${XPATH_ELEMENTS[j++]}"
SHA1="${XPATH_ELEMENTS[j++]}"
NO_DECOMPRESS="${XPATH_ELEMENTS[j++]}"
LIMIT_TRANSFER_BW="${XPATH_ELEMENTS[j++]}"

DST_HOST=`get_destination_host $IMAGE_ID`

if [ -z "$DST_HOST" ]; then
    error_message "Datastore template missing 'BRIDGE_LIST' attribute."
    exit -1
fi

# Check if redundancy level is valid

REDUNDANCY_LOWER_BOUND=1
REDUNDANCY_UPPER_BOUND=64

if [[ "$DRBD_REDUNDANCY" -lt "$REDUNDANCY_LOWER_BOUND" ]]; then

  error_message "Replication redundancy cannot be below \
    "$REDUNDANCY_LOWER_BOUND", given: $DRBD_REDUNDANCY"
  exit -1
  
elif [[ "$DRBD_REDUNDANCY" -gt "$REDUNDANCY_UPPER_BOUND" ]]; then

  error_message "Replication redundancy cannot be above \
    "$REDUNDANCY_LOWER_BOUND", given: $DRBD_REDUNDANCY"
  exit -1

fi

set_up_datastore "$BASE_PATH" "$RESTRICTED_DIRS" "$SAFE_DIRS"

DRBD_SIZE="${SIZE}M"
VOLUME_NAME="one-img-${IMAGE_ID}"

REGISTER_COMMAND=$(cat << EOF
  $(drbdmanage add-volume "$VOLUME_NAME" "$DRBD_SIZE" --deploy "$DRBD_REDUNDANCY")
  
    DRBD_MINOR="$(drbdmanage v -m -R "$VOLUME_NAME" | awk -F',' '{ print $6 }')"
    IMAGE_DEVICE="/dev/$DRBD_MINOR_PREFIX$DRBD_MINOR"

    log "Creating $VOLUME_NAME on device $IMAGE_DEVICE"

EOF
)

ssh_exec_and_log "$DST_HOST" "$REGISTER_CMD" \
   "Error registering $VOLUME_NAME on $DST_HOST"

echo "$VOLUME_NAME"
