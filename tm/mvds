#!/bin/bash
#
#==========================================================================
# Copyright 2016 LINBIT USA LCC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#==========================================================================

SRC=$1
DST=$2
VM_ID=$3
DS_ID=$4

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON="${ONE_LOCATION}"/var/remotes/tm/tm_common.sh
fi

source "$TMCOMMON"

DRIVER_PATH=$(dirname "$0")
source "${DRIVER_PATH}"/../../datastore/drbdmanage/drbdmanage.conf
source "${DRIVER_PATH}"/../../datastore/drbdmanage/drbd_common.sh

drbd_log "Beginning mvds action."

# Get virtualization host information
SRC_PATH=$(arg_path "$SRC")
SRC_HOST=$(arg_host "$SRC")
DISK_ID=$(echo "$SRC" | $AWK -F. '{print $NF}')

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
  XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x "$VM_ID" | $XPATH \
  /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/SOURCE \
  /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/SAVE_AS \
  /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/PERSISTENT)

DRBD_RES_NAME="${XPATH_ELEMENTS[j++]}"
SAVE_AS="${XPATH_ELEMENTS[j++]}"
PERSISTENT="${XPATH_ELEMENTS[j++]}"

# Get information for live migration
XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset XPATH_ELEMENTS

while IFS= read -r -d '' element; do
  XPATH_ELEMENTS[0]="$element"
done < <(onedatastore show -x "$DS_ID" | $XPATH /DATASTORE/TEMPLATE/DRBD_SUPPORT_LIVE_MIGRATION)

DRBD_SUPPORT_LIVE_MIGRATION="${XPATH_ELEMENTS[0]:-$DRBD_SUPPORT_LIVE_MIGRATION}"

# Link DRBD device to datastore location.
UNLINK_COMMAND=$(cat <<EOF
    set -e

    rm -f "$SRC_PATH"
EOF
)

ssh_exec_and_log "$SRC_HOST" "$UNLINK_COMMAND" \
          "Error: Unable to remove symbolic link $SRC_PATH on $SRC_HOST"

# Non-persistent resource name.
if [ -z "$PERSISTENT" ]; then
  DRBD_RES_NAME="${DRBD_RES_NAME}-vm${VM_ID}-disk${DISK_ID}"
fi

# Only unassign resources if live migration is not supported.
if [ "$DRBD_SUPPORT_LIVE_MIGRATION" != "yes" ]; then
  drbd_log "Unassigning $DRBD_RES_NAME from $SRC_HOST"

  drbd_unassign_res "$DRBD_RES_NAME" "$SRC_HOST"

  drbd_log "Ending persistent mvds action."
fi

exit 0
