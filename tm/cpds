#!/bin/bash

SRC=$1
DST=$2

DS_ID=$3
VM_ID=$4

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

DRIVER_PATH=$(dirname $0)

source $TMCOMMON

source ${DRIVER_PATH}/../../datastore/drbdmanage/drbd_common.sh

drbd_log "Begining cpds action."

drbd_log "src: $1"
drbd_log "dst: $2"
drbd_log "vm id: $3"
drbd_log "ds id: $4"

SRC_HOST=`arg_host $SRC`

DISK_ID=$(echo "$SRC"|awk -F. '{print $NF}')

drbd_log "disk id: $DISK_ID"

# Get image information

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset i j

while IFS= read -r -d '' element; do
  XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x $VM_ID| $XPATH \
  /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/SOURCE \
  /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/SAVE_AS \
  /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/PERSISTENT)

DRBD_RES_NAME="${XPATH_ELEMENTS[j++]}"
DRBD_CLONE_NAME="$DST"
SAVE_AS="${XPATH_ELEMENTS[j++]}"
PERSISTENT="${XPATH_ELEMENTS[j++]}"

  drbd_log "res name: $DRBD_RES_NAME"
  drbd_log "save as: $SAVE_AS"
  drbd_log "persistent: $PERSISTENT"

# Node that holds temporary snapshot needed to clone resource.
DRBD_SNAP_NODE=$(drbd_get_assignment_node $DRBD_RES_NAME)

# Create new resource from DRBD_RES_NAME
if [ $(drbd_clone_res $DRBD_CLONE_NAME $DRBD_RES_NAME $DRBD_SNAP_NODE) -ne 0 ]; then
  error_message "Error created clone from $DRBD_RES_NAME"
  exit -1
fi

drbd_log "Ending cpds action."

exit 0
