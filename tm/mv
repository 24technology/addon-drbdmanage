#!/bin/bash
#
#==========================================================================
# Copyright 2016 LINBIT USA LCC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#==========================================================================

SRC=$1
DST=$2

VM_ID=$3
DS_ID=$4

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON="${ONE_LOCATION}"/var/remotes/tm/tm_common.sh
fi

source "$TMCOMMON"

DRIVER_PATH=$(dirname "$0")
source "${DRIVER_PATH}"/../../datastore/drbdmanage/drbdmanage.conf
source "${DRIVER_PATH}"/../../datastore/drbdmanage/drbd_common.sh

drbd_log "Beginning mv action."
# Determine the source, host, and the location of the images.
SRC_HOST=$(arg_host "$SRC")
SRC_PATH=$(arg_path "$SRC")
DISK_ID=$(echo "$SRC"|awk -F. '{print $NF}')

DST_HOST=$(arg_host "$DST")
DST_PATH=$(arg_path "$DST")
DST_DIR=$(dirname "$DST_PATH")

# Exit if we're not actually moving anything.
if [ "$SRC" == "$DST" ]; then
  drbd_log "$SRC and $DST are the same, exiting."

  exit 0
fi

# Make a new path for the dst_host, remove the src_host's path.
ssh_make_path "$DST_HOST" "$DST_DIR"

ssh_exec_and_log "$SRC_HOST" "rm -rf $SRC_PATH" \
  "Error removing $SRC_PATH on $SRC_HOST"

# Get image information
XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
  XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x "$VM_ID" | $XPATH \
  /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/SOURCE \
  /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/TARGET \
  /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/TYPE \
  /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/PERSISTENT)

DRBD_RES_NAME="${XPATH_ELEMENTS[j++]}"
TARGET="${XPATH_ELEMENTS[j++]}"
TYPE="${XPATH_ELEMENTS[j++]}"
PERSISTENT="${XPATH_ELEMENTS[j++]}"

# Get information for live migration and bridge list.
unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
  XPATH_ELEMENTS[i++]="$element"
done < <(onedatastore show -x "$DS_ID" | $XPATH \
  /DATASTORE/TEMPLATE/BRIDGE_LIST \
  /DATASTORE/TEMPLATE/DRBD_MIN_RATIO \
  /DATASTORE/TEMPLATE/DRBD_MIN_COUNT \
  /DATASTORE/TEMPLATE/DRBD_SUPPORT_LIVE_MIGRATION)

BRIDGE_LIST="${XPATH_ELEMENTS[j++]}"
DRBD_MIN_RATIO="${XPATH_ELEMENTS[j++]:-$DRBD_MIN_RATIO}"
DRBD_MIN_COUNT="${XPATH_ELEMENTS[j++]:-$DRBD_MIN_COUNT}"
DRBD_SUPPORT_LIVE_MIGRATION="${XPATH_ELEMENTS[j++]:-$DRBD_SUPPORT_LIVE_MIGRATION}"

drbd_log "Moving $TARGET"

if [ -z "$PERSISTENT" ]; then
  if [ $TYPE == "CDROM" ]; then
    drbd_log "$DRBD_RES_NAME is a non-persistent CDROM image"
  else
    DRBD_RES_NAME="${DRBD_RES_NAME}-vm${VM_ID}-disk${DISK_ID}"
    drbd_log "$DRBD_RES_NAME is a non-persistent OS or DATABLOCK image"
  fi
else
    drbd_log "$DRBD_RES_NAME is a persistent OS, CDROM or DATABLOCK image"
fi

# Assign res to dest.
drbd_deploy_res_on_host "$DRBD_RES_NAME" "$DST_HOST"

# Get Device path and make sure it's ready for IO.
DRBD_DEVICE_PATH=$(drbd_get_device_for_res "$DRBD_RES_NAME")

exec_and_log "drbd_is_node_ready $DST_HOST $DRBD_DEVICE_PATH" \
  "DRBD device at $DRBD_DEVICE_PATH not ready for IO on $DST_HOST, drbdsetup status: $(drbdsetup status --color=never $DRBD_RES_NAME)"

# If the source is a not storage node and
# live migrations are not enabled, unassign res from src.
if [ "$(drbd_is_node_in_list "$SRC_HOST" $BRIDGE_LIST)" -ne 0 ] &&
   [ "$DRBD_SUPPORT_LIVE_MIGRATION" != "yes" ]; then
  drbd_unassign_res "$DRBD_RES_NAME" "$SRC_HOST"
fi

# Link DRBD device to datastore location.
LINK_COMMAND=$(cat <<EOF
    set -e

    ln -fs "$DRBD_DEVICE_PATH" "$DST_PATH"
EOF
)

ssh_exec_and_log "$DST_HOST" "$LINK_COMMAND" \
          "Error: Unable to link $DRBD_RES_NAME to $DST_PATH on $DST_HOST"

drbd_log "Ending mv action."

exit 0
